name: Docker build and deploy to argoCD
on:
  push:
    tags:
      - "*"

env:
  PROJECTNAME: imaigine
  REGISTRY: ${{ vars.DOCKERHUB_USERNAME}}
  VERSION: ${{github.ref_name}}

defaults:
  run:
    shell: bash

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: true


      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}- 


      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKERHUB_USERNAME}}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: push README to Dockerhub
      #   uses: christian-korneck/update-container-description-action@v1
      #   env:
      #     DOCKER_USER: ${{ vars.DOCKERHUB_USERNAME}}
      #     DOCKER_PASS: ${{ secrets.DOCKERHUB_TOKEN }}

      #   with:
      #     destination_container_repo: ${{ vars.DOCKERHUB_USERNAME}}/$PROJECTNAME-dev
      #     provider: dockerhub
      #     short_description: ''
      #     readme_file: 'README.md'          

      - name: Build, tag, and push image
        id: build-image
        run: |
          docker build -t $REGISTRY/$PROJECTNAME-dev:${VERSION} -t $REGISTRY/$PROJECTNAME-dev:latest  .
          docker push $REGISTRY/$PROJECTNAME-dev:latest
          docker push $REGISTRY/$PROJECTNAME-dev:${VERSION}